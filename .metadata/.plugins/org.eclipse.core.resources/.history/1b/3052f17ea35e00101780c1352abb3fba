package com.example.FIT_STORE.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.FIT_STORE.dao.UserRepo;
import com.example.FIT_STORE.model.Nutrition;
import com.example.FIT_STORE.model.UserReg;

import jakarta.servlet.http.HttpSession;

@Controller
public class ProfileController {
	@Autowired
	UserRepo up;
	@RequestMapping("/pro")
	public String RegisterProcess(@RequestParam("uname")String name,@RequestParam("uemail")String email,
			@RequestParam("uphno")String phno,@RequestParam("upass")String password,ModelMap model)
	{
		UserReg u=new UserReg();
		u.setName(name);
		u.setEmail(email);
		u.setPhnno(Long.parseLong(phno));
		u.setPassword(password);
		up.save(u);
		model.put("msg", "Registered!");
		return "register";
	}
	
	@PostMapping("/logprocess")
	public String login(@RequestParam("uemail")String email, @RequestParam("upass")String pass,ModelMap model,HttpSession session)
	{
		UserReg user=up.findByEmailAndPassword(email, pass);
		if(user!=null)
		{
			session.setAttribute("data", email);
			return "dashboard";
			
					
		}
		else {
			model.put("msg", "Wrong Credential!");
			return "login";
		}
	}
	
	
	@GetMapping("/proView")
	public String editClient(Model model) {
		UserReg ui = new UserReg();
		int id=ui.getId();
	    UserReg ntr = up.findById(id);
	    if (ntr == null) {
	        return "profile";
	    }

	    UserReg clientDto = new  UserReg();
	    clientDto.setName(ntr.getName());
	    clientDto.setEmail(ntr.getEmail());
	    clientDto.setAge(ntr.getAge());
	    clientDto.setGender(ntr.getGender());
	    clientDto.setHeight(ntr.getHeight());
	    clientDto.setWeight(ntr.getWeight());
	    

	    model.addAttribute("ntr", ntr);
	    model.addAttribute("clientDto", clientDto);

	    return "profile";
	}
	
	
	@PostMapping("/proView")
	public String editClient(
	    Model model,
	    
	    @Validated @ModelAttribute UserReg clientDto,
	    BindingResult result,ModelMap model1
	) {
		int id=clientDto.getId();
		UserReg client = up.findById(id);
	    if (client == null) {
	        return "profile";
	    }

	    model.addAttribute("client", client);

	    if (result.hasErrors()) {
	        return "proView";
	    }
	    client.setName(clientDto.getName());
	    client.setEmail(clientDto.getEmail());
	    client.setAge(clientDto.getAge());
	    client.setGender(clientDto.getGender());
	    client.setHeight(clientDto.getHeight());
	    client.setWeight(clientDto.getWeight());
	    
	    
	    
	        
	        up.save(client);
	        
	    


	    return "redirect:/proView";
	}


}





