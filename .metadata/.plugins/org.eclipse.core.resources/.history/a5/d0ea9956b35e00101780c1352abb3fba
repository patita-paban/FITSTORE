package com.example.FIT_STORE.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.FIT_STORE.dao.NutritionRepo;
import com.example.FIT_STORE.model.Nutrition;
import com.example.FIT_STORE.model.UserReg;

@Controller
public class NutritionController {
	@Autowired
	NutritionRepo NR;
	
	@RequestMapping("/viewNut")
	public String getNutrition(Model model) {
		List<Nutrition> Nut = NR.findAll();
		model.addAttribute("nut_item",Nut);
		return "nutrition";
		
		
	}
	
	
	@RequestMapping("/addNut")
	public String addNutrition(@RequestParam("mealDate")String date,@RequestParam("mealType")String type,
			@RequestParam("calories")String calories,@RequestParam("water")String water,
			@RequestParam("description")String description,ModelMap model)
	{
		Nutrition nut = new Nutrition();
		
		nut.setDate(date);
		nut.setMeal(type);
		nut.setCalories(Integer.parseInt(calories));
		nut.setWater(Integer.parseInt(water));
		nut.setMeal_des(description);
		NR.save(nut);
		model.put("msg","Nutritions Added Sucessfully!");
		return "redirect:/viewNut";
		
		
	}
	@GetMapping("/deleteNut")
	public String deleteClient(ModelMap model,@RequestParam int id) {
	    Nutrition nt = NR.findById(id);

	    if (nt != null) {
	        NR.delete(nt);
	        model.put("msg","Nutrition deleted!");
	    }

	    return "redirect:/viewNut";
	}
	@GetMapping("/editNu")
	public String editClient(Model model, @RequestParam int id) {
	    Nutrition ntr = NR.findById(id);
	    if (ntr == null) {
	        return "nutrition";
	    }

	    Nutrition clientDto = new  Nutrition();
	    clientDto.setDate(ntr.getDate());
	    clientDto.setMeal(ntr.getMeal());
	    clientDto.setMeal_des(ntr.getMeal_des());
	    clientDto.setWater(ntr.getWater());
	    clientDto.setCalories(ntr.getCalories());
	    

	    model.addAttribute("ntr", ntr);
	    model.addAttribute("clientDto", clientDto);

	    return "editNut";
	}
	
	@PostMapping("/editNu")
	public String editClient(
	    Model model,
	    @RequestParam int id,
	    @Validated @ModelAttribute Nutrition clientDto,
	    BindingResult result,ModelMap model1
	) {
		Nutrition client = NR.findById(id);
	    if (client == null) {
	        return "nutrition";
	    }

	    model.addAttribute("client", client);

	    if (result.hasErrors()) {
	        return "editNut";
	    }
	    client.setDate(clientDto.getDate());
	    client.setMeal(clientDto.getMeal());
	   
	    client.setWater(clientDto.getWater());
	    client.setCalories(clientDto.getCalories());
	    
	    
	        
	        NR.save(client);
	        model1.put("msg","Nutrition Updated!");
	    


	    return "redirect:/viewNut";
	}


	

 
}
